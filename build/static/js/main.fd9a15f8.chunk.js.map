{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.js","store/cart-slice.js","components/Cart/CartItem.js","components/Cart/Cart.js","store/ui-slice.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","store/index.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","cartSlice","createSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","title","removeItemFromCart","filter","cartActions","actions","CartItem","dispatch","useDispatch","total","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","cart","map","cartItem","uiSlice","cartIsVisible","notification","toggle","showNotification","status","message","uiActions","CartButton","cartQuantity","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_PRODUCT","Products","products","product","Notification","specialClasses","error","success","cssClasses","isInitial","App","showCart","ui","useEffect","fetch","then","response","json","data","catch","a","sendRequest","method","body","JSON","stringify","ok","Error","sendCartData","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,QAAU,0BAA0B,SAAW,2BAA2B,MAAQ,wBAAwB,UAAY,4BAA4B,QAAU,4B,mBCA5MD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,QAAU,+B,gBCAhGD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,QAAU,gC,kBCAlHD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,MAAQ,4B,kBCA9DD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,OAAS,6B,gBCA3BD,EAAOC,QAAU,CAAC,SAAW,6B,oICWdC,EAVF,SAACC,GACZ,OACE,yBACEC,UAAS,UAAKC,IAAQC,KAAb,YAAqBH,EAAMC,UAAYD,EAAMC,UAAY,IADpE,SAGGD,EAAMI,Y,wCCNPC,EAAYC,YAAY,CAC5BC,KAAM,OACNC,aAAc,CACZC,MAAO,GACPC,cAAe,EACfC,SAAQ,GAEVC,SAAU,CACRC,YADQ,SACIC,EAAOC,GACjBD,EAAMJ,cAAgBK,EAAOC,QAAQN,cACrCI,EAAML,MAAQM,EAAOC,QAAQP,OAE/BQ,cALQ,SAKMH,EAAOC,GACnB,IAAMG,EAAUH,EAAOC,QACjBG,EAAeL,EAAML,MAAMW,MAAK,SAACC,GAAD,OAAUA,EAAKC,KAAOJ,EAAQI,MACpER,EAAMJ,gBACNI,EAAMH,SAAU,EACXQ,GASHA,EAAaI,WACbJ,EAAaK,WAAaL,EAAaK,WAAaN,EAAQO,OAT5DX,EAAML,MAAMiB,KAAK,CACfJ,GAAIJ,EAAQI,GACZG,MAAOP,EAAQO,MACfF,SAAU,EACVC,WAAYN,EAAQO,MACpBlB,KAAMW,EAAQS,SAOpBC,mBAvBQ,SAuBWd,EAAOC,GACxB,IAAMO,EAAKP,EAAOC,QACZG,EAAeL,EAAML,MAAMW,MAAK,SAACC,GAAD,OAAUA,EAAKC,KAAOA,KAC5DR,EAAMJ,gBACNI,EAAMH,SAAU,EACc,IAA1BQ,EAAaI,SACfT,EAAML,MAAQK,EAAML,MAAMoB,QAAO,SAACR,GAAD,OAAUA,EAAKC,KAAOA,MAEvDH,EAAaI,WACbJ,EAAaK,WAAaL,EAAaK,WAAaL,EAAaM,WAM5DK,EAAczB,EAAU0B,QAEtB1B,ICPA2B,EAtCE,SAAChC,GAChB,IAAMiC,EAAWC,cACjB,EAA8ClC,EAAMqB,KAA5CM,EAAR,EAAQA,MAAOJ,EAAf,EAAeA,SAAUY,EAAzB,EAAyBA,MAAOV,EAAhC,EAAgCA,MAAOH,EAAvC,EAAuCA,GAcvC,OACE,qBAAIrB,UAAWC,IAAQmB,KAAvB,UACE,mCACE,6BAAKM,IACL,sBAAK1B,UAAWC,IAAQuB,MAAxB,cACIU,EAAMC,QAAQ,GAAI,IACpB,uBAAMnC,UAAWC,IAAQmC,UAAzB,eAAuCZ,EAAMW,QAAQ,GAArD,kBAGJ,sBAAKnC,UAAWC,IAAQoC,QAAxB,UACE,sBAAKrC,UAAWC,IAAQqB,SAAxB,eACI,+BAAOA,OAEX,sBAAKtB,UAAWC,IAAQ6B,QAAxB,UACE,wBAAQQ,QA1BU,WACxBN,EAASH,EAAYF,mBAAmBN,KAyBlC,eACA,wBAAQiB,QAxBO,WACrBN,EACEH,EAAYb,cAAc,CACxBK,KACAK,QACAF,YAmBE,yBCPKe,EAvBF,SAACxC,GACZ,IAAMyC,EAAYC,aAAY,SAAC5B,GAAD,OAAWA,EAAM6B,KAAKlC,SACpD,OACE,eAAC,EAAD,CAAMR,UAAWC,IAAQyC,KAAzB,UACE,oDACA,6BACGF,EAAUG,KAAI,SAACC,GAAD,OACb,cAAC,EAAD,CAEExB,KAAM,CACJC,GAAIuB,EAASvB,GACbK,MAAOkB,EAAStC,KAChBgB,SAAUsB,EAAStB,SACnBY,MAAOU,EAASrB,WAChBC,MAAOoB,EAASpB,QANboB,EAASvB,a,iBCVpBwB,EAAUxC,YAAY,CAC1BC,KAAM,KACNC,aAAc,CAAEuC,eAAe,EAAOC,aAAc,MACpDpC,SAAU,CACRqC,OADQ,SACDnC,GACLA,EAAMiC,eAAiBjC,EAAMiC,eAE/BG,iBAJQ,SAISpC,EAAOC,GACtBD,EAAMkC,aAAe,CACnBG,OAAQpC,EAAOC,QAAQmC,OACvBxB,MAAOZ,EAAOC,QAAQW,MACtByB,QAASrC,EAAOC,QAAQoC,aAMnBC,EAAYP,EAAQf,QAElBe,ICHAQ,EAdI,SAACtD,GAClB,IAAMiC,EAAWC,cACXqB,EAAeb,aAAY,SAAC5B,GAAD,OAAWA,EAAM6B,KAAKjC,iBAIvD,OACE,yBAAQ6B,QAJgB,WACxBN,EAASoB,EAAUJ,WAGiBhD,UAAWC,IAAQsD,OAAvD,UACE,2CACA,sBAAMvD,UAAWC,IAAQuD,MAAzB,SAAiCF,Q,iBCKxBG,EAfI,SAAC1D,GAClB,OACE,yBAAQC,UAAWC,IAAQyD,OAA3B,UACE,2CACA,8BACE,6BACE,6BACE,cAAC,EAAD,cCEGC,EATA,SAAC5D,GACd,OACE,eAAC,WAAD,WACE,cAAC,EAAD,IACA,+BAAOA,EAAMI,e,gBC2BJyD,EA7BK,SAAC7D,GACnB,IAAMiC,EAAWC,cACTP,EAAkC3B,EAAlC2B,MAAOL,EAA2BtB,EAA3BsB,GAAIG,EAAuBzB,EAAvByB,MAAOqC,EAAgB9D,EAAhB8D,YAW1B,OACE,oBAAI7D,UAAWC,IAAQmB,KAAvB,SACE,eAAC,EAAD,WACE,mCACE,6BAAKM,IACL,sBAAK1B,UAAWC,IAAQuB,MAAxB,cAAiCA,EAAMW,QAAQ,SAEjD,4BAAI0B,IACJ,qBAAK7D,UAAWC,IAAQ6B,QAAxB,SACE,wBAAQQ,QAlBS,WACvBN,EACEH,EAAYb,cAAc,CACxBK,KACAK,QACAF,YAaE,iC,iBCxBJsC,EAAgB,CACpB,CACEzC,GAAI,KACJG,MAAO,KACPE,MAAO,cACPmC,YACE,mMAEJ,CACExC,GAAI,KACJG,MAAO,GACPE,MAAO,aACPmC,YAAa,mLAuBFE,EAnBE,SAAChE,GAChB,OACE,0BAASC,UAAWC,IAAQ+D,SAA5B,UACE,4DACA,6BACGF,EAAcnB,KAAI,SAACsB,GAAD,OACjB,cAAC,EAAD,CAEE5C,GAAI4C,EAAQ5C,GACZK,MAAOuC,EAAQvC,MACfF,MAAOyC,EAAQzC,MACfqC,YAAaI,EAAQJ,aAJhBI,EAAQ5C,a,gBCJV6C,EApBM,SAACnE,GACpB,IAAIoE,EAAiB,GAEA,UAAjBpE,EAAMmD,SACRiB,EAAiBlE,IAAQmE,OAEN,YAAjBrE,EAAMmD,SACRiB,EAAiBlE,IAAQoE,SAG3B,IAAMC,EAAU,UAAMrE,IAAQ8C,aAAd,YAA8BoB,GAE9C,OACE,0BAASnE,UAAWsE,EAApB,UACE,6BAAKvE,EAAM2B,QACX,4BAAI3B,EAAMoD,c,wBCVZoB,GAAY,EAsCDC,MApCf,WACE,IAAMC,EAAWhC,aAAY,SAAC5B,GAAD,OAAWA,EAAM6D,GAAG5B,iBAC3CJ,EAAOD,aAAY,SAAC5B,GAAD,OAAWA,EAAM6B,QACpCK,EAAeN,aAAY,SAAC5B,GAAD,OAAWA,EAAM6D,GAAG3B,gBAC/Cf,EAAWC,cAejB,OAdA0C,qBAAU,WACR3C,GCZK,SAACA,GACN4C,MACE,qFAECC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLhD,EAASH,EAAYjB,YAAY,CAC7BJ,MAAMwE,EAAKxE,OAAS,GACpBC,cAAcuE,EAAKvE,oBAGxBwE,OAAM,SAACb,GACNpC,EACEoB,EAAUH,iBAAiB,CACzBC,OAAQ,QACRxB,MAAO,WACPyB,QAAS,wCDLhB,CAACnB,IAEJ2C,qBAAU,WACJJ,EACFA,GAAY,EAGV7B,EAAKhC,SACPsB,ECIsB,SAACU,GAC3B,8CAAO,WAAOV,GAAP,eAAAkD,EAAA,6DACLlD,EACEoB,EAAUH,iBAAiB,CACzBC,OAAQ,UACRxB,MAAO,aACPyB,QAAS,wBAIPgC,EATD,+BAAAD,EAAA,MASe,sBAAAA,EAAA,sEACKN,MACrB,oFACA,CACEQ,OAAQ,MACRC,KAAMC,KAAKC,UAAU,CACnB/E,MAAOkC,EAAKlC,MACZC,cAAeiC,EAAKjC,kBAPR,iBAYJ+E,GAZI,sBAaV,IAAIC,MAAM,6BAbA,2CATf,uEA0BGN,IA1BH,OA2BHnD,EACEoB,EAAUH,iBAAiB,CACzBC,OAAQ,UACRxB,MAAO,aACPyB,QAAS,kCA/BV,gDAmCHnB,EACEoB,EAAUH,iBAAiB,CACzBC,OAAQ,QACRxB,MAAO,WACPyB,QAAS,+BAvCV,yDAAP,sDDLauC,CAAahD,MAEvB,CAACA,EAAMV,IAGR,qCACGe,GACC,cAAC,EAAD,CACEG,OAAQH,EAAaG,OACrBxB,MAAOqB,EAAarB,MACpByB,QAASJ,EAAaI,UAG1B,eAAC,EAAD,WACGsB,GAAY,cAAC,EAAD,IACb,cAAC,EAAD,WE/BOkB,EAJDC,YAAe,CAC3BC,QAAS,CAAEnB,GAAI7B,EAAQgD,QAASnD,KAAMtC,EAAUyF,WCClDC,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,W","file":"static/js/main.fd9a15f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__1zMOi\",\"details\":\"CartItem_details__2_Z3n\",\"quantity\":\"CartItem_quantity__DfEXm\",\"price\":\"CartItem_price__2Nl0j\",\"itemprice\":\"CartItem_itemprice__j9ZSt\",\"actions\":\"CartItem_actions__UwVPJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__WYS0J\",\"price\":\"ProductItem_price__1GiPR\",\"actions\":\"ProductItem_actions__14Yr-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3D5S5\",\"error\":\"Notification_error__2ILHS\",\"success\":\"Notification_success__3Ww1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__3nU_b\",\"badge\":\"CartButton_badge__3njqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__3GqLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__k5Wsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__1PCvW\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    changed:false\n  },\n  reducers: {\n    replaceCart(state, action){\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.totalQuantity++;\n      state.changed = true\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n      state.changed = true\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;\n","import classes from \"./CartItem.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\nconst CartItem = (props) => {\n  const dispatch = useDispatch();\n  const { title, quantity, total, price, id } = props.item;\n\n  const removeItemHandler = () => {\n    dispatch(cartActions.removeItemFromCart(id));\n  };\n  const addItemHandler = () => {\n    dispatch(\n      cartActions.addItemToCart({\n        id,\n        title,\n        price,\n      })\n    );\n  };\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{\" \"}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeItemHandler}>-</button>\n          <button onClick={addItemHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\nimport { useSelector } from \"react-redux\";\nconst Cart = (props) => {\n  const cartItems = useSelector((state) => state.cart.items);\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map((cartItem) => (\n          <CartItem\n            key={cartItem.id}\n            item={{\n              id: cartItem.id,\n              title: cartItem.name,\n              quantity: cartItem.quantity,\n              total: cartItem.totalPrice,\n              price: cartItem.price,\n            }}\n          />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst uiSlice = createSlice({\n  name: \"ui\",\n  initialState: { cartIsVisible: false, notification: null },\n  reducers: {\n    toggle(state) {\n      state.cartIsVisible = !state.cartIsVisible;\n    },\n    showNotification(state, action) {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message,\n      };\n    },\n  },\n});\n\nexport const uiActions = uiSlice.actions;\n\nexport default uiSlice;\n","import classes from \"./CartButton.module.css\";\nimport { uiActions } from \"../../store/ui-slice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst CartButton = (props) => {\n  const dispatch = useDispatch();\n  const cartQuantity = useSelector((state) => state.cart.totalQuantity);\n  const cartButtonHandler = () => {\n    dispatch(uiActions.toggle());\n  };\n  return (\n    <button onClick={cartButtonHandler} className={classes.button}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{cartQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import Card from \"../UI/Card\";\nimport { cartActions } from \"../../store/cart-slice\";\nimport classes from \"./ProductItem.module.css\";\nimport { useDispatch } from \"react-redux\";\n\nconst ProductItem = (props) => {\n  const dispatch = useDispatch();\n  const { title, id, price, description } = props;\n\n  const addToCartHandler = () => {\n    dispatch(\n      cartActions.addItemToCart({\n        id,\n        title,\n        price,\n      })\n    );\n  };\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nconst DUMMY_PRODUCT = [\n  {\n    id: \"p1\",\n    price: 1190,\n    title: \"MacBook Pro\",\n    description:\n      \"Our most advanced Neural Engine for up to 11x faster machine learning. And up to 20 hours of battery life - the longest ever in a Mac, it's our most popular pro notebook on a whole new level.\",\n  },\n  {\n    id: \"p2\",\n    price: 10,\n    title: \"Phone Case\",\n    description: \"A cell phone case is the protective cover for a Smartphone and will prevent it from damages by different types of mishaps such as scratches, minor accidents and water spills.\",\n  },\n];\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_PRODUCT.map((product) => (\n          <ProductItem\n            key={product.id}\n            id={product.id}\n            title={product.title}\n            price={product.price}\n            description={product.description}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from \"./Notification.module.css\";\n\nconst Notification = (props) => {\n  let specialClasses = \"\";\n\n  if (props.status === \"error\") {\n    specialClasses = classes.error;\n  }\n  if (props.status === \"success\") {\n    specialClasses = classes.success;\n  }\n\n  const cssClasses = `${classes.notification} ${specialClasses}`;\n\n  return (\n    <section className={cssClasses}>\n      <h2>{props.title}</h2>\n      <p>{props.message}</p>\n    </section>\n  );\n};\n\nexport default Notification;\n","import { useEffect } from \"react\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Notification from \"./components/UI/Notification\";\nimport { sendCartData, fetchCartData } from \"./store/cart-actions\";\nlet isInitial = true;\n\nfunction App() {\n  const showCart = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.ui.notification);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    }\n  }, [cart, dispatch]);\n\n  return (\n    <>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\nexport const fetchCartData = () => {\n  return (dispatch) => {\n    fetch(\n      \"https://cart-redux-react-default-rtdb.europe-west1.firebasedatabase.app/cart.json\"\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        dispatch(cartActions.replaceCart({\n            items:data.items || [],\n            totalQuantity:data.totalQuantity\n        }));\n      })\n      .catch((error) => {\n        dispatch(\n          uiActions.showNotification({\n            status: \"error\",\n            title: \"Error...\",\n            message: \"Fetching cart data failed!\",\n          })\n        );\n      });\n  };\n};\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data!\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://cart-redux-react-default-rtdb.europe-west1.firebasedatabase.app/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify({\n            items: cart.items,\n            totalQuantity: cart.totalQuantity,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success...\",\n          message: \"Sent cart data successfully!\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error...\",\n          message: \"Sending cart data failed!\",\n        })\n      );\n    }\n  };\n};\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport uiSlice from \"./ui-slice\";\nimport cartSlice from \"./cart-slice\";\n\nconst store = configureStore({\n  reducer: { ui: uiSlice.reducer, cart: cartSlice.reducer },\n});\n\nexport default store;\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}